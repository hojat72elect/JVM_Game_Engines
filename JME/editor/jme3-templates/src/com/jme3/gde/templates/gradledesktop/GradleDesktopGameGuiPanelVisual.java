/*
 * Copyright (c) 2022 jMonkeyEngine
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'jMonkeyEngine' nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.jme3.gde.templates.gradledesktop;

import com.jme3.gde.templates.gradledesktop.options.CachedOptionsContainer;
import com.jme3.gde.templates.gradledesktop.options.TemplateLibrary;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import org.openide.WizardDescriptor;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

/**
 * UI Component for the New Gradle Game Wizard GUI panel.
 *
 * @author peedeeboy
 */
public class GradleDesktopGameGuiPanelVisual extends JPanel {

    /**
     * Creates new form GradleDesktopGameGuiPanelVisual
     */
    public GradleDesktopGameGuiPanelVisual(GradleDesktopGameGuiPanel panel) {
        initComponents();

        updateGuiLibraryDescription();
        updatePhysicsLibraryDescription();
        updateNetworkingLibraryDescription();
    }

    private void updateGuiLibraryDescription() {
        TemplateLibrary selectedGuiLibrary = guiComboBox.getItemAt(guiComboBox.getSelectedIndex());
        guiDescriptionTextArea.setText(selectedGuiLibrary.getDescription());
    }

    private void updatePhysicsLibraryDescription() {
        TemplateLibrary selectedPhysicsLibrary = physicsEngineComboBox.getItemAt(physicsEngineComboBox.getSelectedIndex());
        physicsEngineDescriptionTextArea.setText(selectedPhysicsLibrary.getDescription());
    }

    private void updateNetworkingLibraryDescription() {
        TemplateLibrary selectedNetworkingLibrary = networkingComboBox.getItemAt(networkingComboBox.getSelectedIndex());
        networkingDescriptionTextArea.setText(selectedNetworkingLibrary.getDescription());
    }

    protected void store(WizardDescriptor d) {
        TemplateLibrary selectedGuiLibrary = guiComboBox.getItemAt(guiComboBox.getSelectedIndex());
        TemplateLibrary selectedPhysicsLibrary = physicsEngineComboBox.getItemAt(physicsEngineComboBox.getSelectedIndex());
        TemplateLibrary selectedNetworkingLibrary = networkingComboBox.getItemAt(networkingComboBox.getSelectedIndex());

        d.putProperty("guiLibrary", selectedGuiLibrary);
        d.putProperty("physicsLibrary", selectedPhysicsLibrary);
        d.putProperty("networkingLibrary", selectedNetworkingLibrary);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiLabel = new JLabel();
        guiComboBox = new JComboBox<>();
        guiDescriptionScrollPane = new JScrollPane();
        guiDescriptionTextArea = new JTextArea();
        jSeparator1 = new JSeparator();
        physicsEngineLabel = new JLabel();
        physicsEngineComboBox = new JComboBox<>();
        physicsEngineDescriptionScrollPane = new JScrollPane();
        physicsEngineDescriptionTextArea = new JTextArea();
        jSeparator2 = new JSeparator();
        networkingLabel = new JLabel();
        networkingComboBox = new JComboBox<>();
        networkingDescriptionScrollPane = new JScrollPane();
        networkingDescriptionTextArea = new JTextArea();

        guiLabel.setLabelFor(guiComboBox);
        Mnemonics.setLocalizedText(guiLabel, NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.guiLabel.text")); // NOI18N

        guiComboBox.setModel(new DefaultComboBoxModel<TemplateLibrary>(CachedOptionsContainer.getInstance().getGuiLibraries().toArray(TemplateLibrary[]::new)));
        guiComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                guiComboBoxActionPerformed(evt);
            }
        });

        guiDescriptionTextArea.setEditable(false);
        guiDescriptionTextArea.setColumns(20);
        guiDescriptionTextArea.setLineWrap(true);
        guiDescriptionTextArea.setRows(3);
        guiDescriptionTextArea.setWrapStyleWord(true);
        guiDescriptionScrollPane.setViewportView(guiDescriptionTextArea);

        physicsEngineLabel.setLabelFor(physicsEngineComboBox);
        Mnemonics.setLocalizedText(physicsEngineLabel, NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.physicsEngineLabel.text")); // NOI18N

        physicsEngineComboBox.setModel(new DefaultComboBoxModel<TemplateLibrary>(CachedOptionsContainer.getInstance().getPhysicsLibraries().toArray(TemplateLibrary[]::new)));
        physicsEngineComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                physicsEngineComboBoxActionPerformed(evt);
            }
        });

        physicsEngineDescriptionTextArea.setEditable(false);
        physicsEngineDescriptionTextArea.setColumns(20);
        physicsEngineDescriptionTextArea.setLineWrap(true);
        physicsEngineDescriptionTextArea.setRows(3);
        physicsEngineDescriptionTextArea.setWrapStyleWord(true);
        physicsEngineDescriptionScrollPane.setViewportView(physicsEngineDescriptionTextArea);

        networkingLabel.setLabelFor(networkingComboBox);
        Mnemonics.setLocalizedText(networkingLabel, NbBundle.getMessage(GradleDesktopGameGuiPanelVisual.class, "GradleDesktopGameGuiPanelVisual.networkingLabel.text")); // NOI18N

        networkingComboBox.setModel(new DefaultComboBoxModel<TemplateLibrary>(CachedOptionsContainer.getInstance().getNetworkingLibraries().toArray(TemplateLibrary[]::new)));
        networkingComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                networkingComboBoxActionPerformed(evt);
            }
        });

        networkingDescriptionTextArea.setEditable(false);
        networkingDescriptionTextArea.setColumns(20);
        networkingDescriptionTextArea.setLineWrap(true);
        networkingDescriptionTextArea.setRows(3);
        networkingDescriptionTextArea.setWrapStyleWord(true);
        networkingDescriptionScrollPane.setViewportView(networkingDescriptionTextArea);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(guiDescriptionScrollPane)
                            .addComponent(networkingDescriptionScrollPane)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guiLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(guiComboBox, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2)
                            .addComponent(physicsEngineDescriptionScrollPane)
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(networkingLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(networkingComboBox, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(physicsEngineLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(physicsEngineComboBox, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(guiLabel)
                    .addComponent(guiComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guiDescriptionScrollPane, GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(physicsEngineComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(physicsEngineLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(physicsEngineDescriptionScrollPane, GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(networkingComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(networkingLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networkingDescriptionScrollPane, GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guiComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_guiComboBoxActionPerformed
        updateGuiLibraryDescription();
    }//GEN-LAST:event_guiComboBoxActionPerformed

    private void physicsEngineComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_physicsEngineComboBoxActionPerformed
        updatePhysicsLibraryDescription();
    }//GEN-LAST:event_physicsEngineComboBoxActionPerformed

    private void networkingComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_networkingComboBoxActionPerformed
        updateNetworkingLibraryDescription();
    }//GEN-LAST:event_networkingComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JComboBox<TemplateLibrary> guiComboBox;
    private JScrollPane guiDescriptionScrollPane;
    private JTextArea guiDescriptionTextArea;
    private JLabel guiLabel;
    private JSeparator jSeparator1;
    private JSeparator jSeparator2;
    private JComboBox<TemplateLibrary> networkingComboBox;
    private JScrollPane networkingDescriptionScrollPane;
    private JTextArea networkingDescriptionTextArea;
    private JLabel networkingLabel;
    private JComboBox<TemplateLibrary> physicsEngineComboBox;
    private JScrollPane physicsEngineDescriptionScrollPane;
    private JTextArea physicsEngineDescriptionTextArea;
    private JLabel physicsEngineLabel;
    // End of variables declaration//GEN-END:variables
}
