apply plugin: "java"
apply plugin: 'kotlin'

if (JavaVersion.current().isJava9Compatible()) {
    compileJava {
        options.release = versions.java
    }
}
sourceCompatibility = versions.java
targetCompatibility = versions.java

sourceSets.main.java.srcDirs = ["src"]
sourceSets.main.resources.srcDirs = ["res"]
sourceSets.test.java.srcDirs = ["test"]

compileJava {
    options.fork = true
    options.incremental = true
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    testImplementation libraries.junit
    api "com.badlogicgames.gdx:gdx-jnigen-loader:2.5.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

processResources.duplicatesStrategy = DuplicatesStrategy.EXCLUDE

apply plugin: "com.badlogicgames.gdx.gdx-jnigen"
jnigen {
    sharedLibName = "gdx"
    temporaryDir = "../target/native"
    all {
        cppExcludes = ["iosgl/**"]
    }
    add(Windows, x32)
    add(Windows, x64)
    add(Linux, x64)
    add(Linux, x32, ARM)
    add(Linux, x64, ARM)
    add(Linux, x64, RISCV)
    add(Android) {
        linkerFlags += " -llog"
    }
    add(MacOsX, x64)
    add(MacOsX, x64, ARM)
    add(IOS) {
        headerDirs = ["iosgl"]
        cppExcludes = []
        linkerFlags += " -undefined dynamic_lookup "
    }
    robovm {
        extraXCFramework("libs/ObjectAL.xcframework")
    }
}
buildscript {
    ext.kotlin_version = '2.0.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
